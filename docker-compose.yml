volumes:
  open-webui:
  searxng:
  n8n:
  qdrant-data:
  docling-data:
  # redis missing for owui
  # postgresql missing for owui


networks:
  company_ai_network:
    driver: bridge

version: '3'
services:
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: always
    networks:
      - company_ai_network
    ports:
      - "3000:8080"
    volumes:
      - open-webui:/app/backend/data
    environment:
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}  # F체r Sessions
      - LOG_LEVEL=INFO                        # Debugging
      - DISABLE_SIGNUP=True                   # Registrierung steuern
      #- WEBUI_AUTH=${WEBUI_AUTH}
      - WEBUI_NAME=${WEBUI_NAME}
      #- WEBUI_URL=${WEBUI_URL}
      #- FRONTEND_BUILD_DIR=${FRONTEND_BUILD_DIR}
      - ENABLE_OPENAI_API=true
      - OPENAI_API_KEY=${IONOS_TOKEN} #das ist nicht OpenAI sondern Ionos
      - OPENAI_BASE_URL=${IONOS_BASE_URL}
      # Qdrant Konfiguration
      - VECTOR_DB=qdrant
      - QDRANT_URI=http://qdrant:6333
      - QDRANT_API_KEY=${QDRANT_API_KEY:-sfsfsfsfsfsfssf}
      - QDRANT_TIMEOUT=30
      - QDRANT_HEALTH_CHECK_URL=/collections
      # Docling Konfiguration
      - DOCLING_URL=http://docling-serve:5001
    depends_on:
      - qdrant
      - docling-serve
    env_file:
      - .env          # F체r sensible Daten

  nginx:
    image: nginx:mainline
    container_name: nginx
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - openwebui
      - searxng
    restart: unless-stopped
    networks:
      - company_ai_network
    environment:
      - WEBUI_NAME=ZUGChat

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: always
    networks:
      - company_ai_network
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      - QDRANT_ALLOW_CORS=true

  searxng:
      image: searxng/searxng
      container_name: searxng
      restart: always
      networks:
        - company_ai_network
      ports:
        - "8081:8080"  # Ge채ndert auf 8081 um Konflikte zu vermeiden
      volumes:
        - searxng:/etc/searxng
        - ./settings.yml:/etc/searxng/settings.yml
      environment:
        - BASE_URL=http://searxng:8080/  # Ge채ndert auf den Container-Namen
        - INSTANCE_NAME=Safe Search Engine
        - UWSGI_WORKERS=4
        - UWSGI_THREADS=2

  docling-serve:
    image: ghcr.io/docling-project/docling-serve:latest
    container_name: docling-serve
    restart: always
    networks:
      - company_ai_network
    ports:
      - "8082:5001"
    volumes:
      - docling-data:/app/data
    environment:
      - DOCLING_API_KEY=${DOCLING_API_KEY:-default_key}
      - DOCLING_SERVE_ENABLE_UI=true
      - DOCLING_SERVE_HOST=0.0.0.0
      - DOCLING_SERVE_PORT=5001
      - DOCLING_SERVE_ALLOW_ORIGINS=["*"]
    depends_on:
      - qdrant
